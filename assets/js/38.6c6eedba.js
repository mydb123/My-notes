(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{297:function(t,s,e){"use strict";e.r(s);var r=e(19),a=Object(r.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"var-let-const的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const的区别"}},[t._v("#")]),t._v(" var ,let ,const的区别")]),t._v(" "),e("ol",[e("li",[t._v("使用"),e("code",[t._v("var")]),t._v("声明的变量,其作用域为"),e("strong",[t._v("该语句所在的函数内,且存在变量提升现像")])]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("let")]),t._v("声明的变量,其作用域为"),e("strong",[t._v("该语句所在的代码块内,不存在变量提升")])]),t._v(" "),e("li",[t._v("使用"),e("code",[t._v("const")]),t._v("声明的常量,在后面出现的"),e("strong",[t._v("代码中不能修该")])])]),t._v(" "),e("h2",{attrs:{id:"结构赋值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结构赋值"}},[t._v("#")]),t._v(" 结构赋值")])])}),[],!1,null,null,null);s.default=a.exports}}]);